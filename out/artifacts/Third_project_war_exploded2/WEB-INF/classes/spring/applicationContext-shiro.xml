<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--开启aop，对类代理-->
    <aop:config proxy-target-class="true"/>

    <!--开启shiro注解支持-->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--Shiro的web过滤器-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证-->
        <property name="loginUrl" value="/login"/>
        <!--认证成功同意跳转main，可以不配置，shiro认证成功后自动到上一个请求路径-->
        <property name="successUrl" value="/main"/>
        <!--没有权限跳转到指定界面-->
        <property name="unauthorizedUrl" value="/refuse.html"/>
        <!--自定义filter配置-->
        <property name="filters">
            <map>
                <entry key="authc" value-ref="authenticationFilter"/>
            </map>
        </property>
        <!--过滤器链定义，从上向下执行，一般将/**放在最下边-->
        <property name="filterChainDefinitions">
            <value>
                <!--所有的静态资源要匿名访问-->
                /bootstrap/**=anon
                /css/**=anon
                /js/**=anon
                /static/**=anon
                <!--退出系统-->
                /logout=logout
                /**=authc
            </value>
        </property>
    </bean>
    <!--securityManager安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="realm"/>
    </bean>

    <!--realm-->
    <bean id="realm" class="com.zj.oa.shiro.CustomerRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!--配置凭证匹配器-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
    </bean>

    <bean id="authenticationFilter" class="com.zj.oa.shiro.CustomerFromAuthenticationFilter">
        <!-- 表单中账号的input名称 -->
        <property name="usernameParam" value="username"/>
        <!-- 表单中密码的input名称 -->
        <property name="passwordParam" value="password"/>
    </bean>

</beans>